#!/usr/bin/env python
# -*- coding: utf-8 -*-

import cgGraph
import networkx as nx
import matplotlib.pyplot as plt
from numpy import array
import argparse


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("filename")
    parser.add_argument("--node_size", type=int, default=30)
    parser.add_argument("-o", "--output", default="network.pdf")
    args = parser.parse_args()

    tmap = cgGraph.load_TransitionMap(args.filename)
    G, _ = cgGraph.get_network(tmap)
    pos = nx.get_node_attributes(G, "comp")
    prob = nx.get_node_attributes(G, "prob")
    entropy = nx.get_node_attributes(G, "entropy")
    color = array(prob.values()) * array(entropy.values())
    nodes = nx.draw_networkx_nodes(G, pos, node_size=args.node_size, node_color=color, cmap=plt.cm.Blues)
    nx.draw_networkx_edges(G, pos)
    plt.colorbar(nodes, label="entropy generation")
    plt.xlabel("PCA1")
    plt.ylabel("PCA2")
    plt.axis("tight")
    plt.savefig(args.output)

if __name__ == '__main__':
    main()
